version: "3.7"
name: redpanda-quickstart-one-broker

networks:
  redpanda_network:
    driver: bridge

volumes:
  redpanda-0: null
  mysql_data: null 

services:
  # Layanan Redpanda Broker
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.7
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  # Layanan Redpanda Console
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.6.0
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

  # LAYANAN BARU: MySQL Database
  mysql:
    image: mysql:8.0 
    container_name: mysql_db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: klpk4_sister
      MYSQL_DATABASE: sister_db
      MYSQL_USER: k4
      MYSQL_PASSWORD: klpk4_sister
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      MYSQL_RANDOM_ROOT_PASSWORD: 'no'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - redpanda_network
    restart: always
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "k4", "-pklpk4_sister"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  # Layanan untuk API Express.js Anda
  api_service:
    build: ./api_service
    container_name: api_service_app
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      DB_HOST: mysql_db
      DB_USER: k4
      DB_PASSWORD: klpk4_sister
      DB_NAME: sister_db
      DB_PORT: 3306
      KAFKA_BROKERS: "redpanda-0:9092"
      NODE_ENV: production
    networks:
      - redpanda_network
    depends_on:
      mysql:
        condition: service_healthy
      redpanda-0:
        condition: service_started
    restart: on-failure

  # Layanan untuk konsumen Kafka berbasis Python Anda
  kafka_consumer:
    build: ./kafka_consumer
    container_name: kafka_consumer_app
    environment:
      KAFKA_BROKERS: "redpanda-0:9092"
    networks:
      - redpanda_network
    depends_on:
      - redpanda-0